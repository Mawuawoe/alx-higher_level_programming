How to Use 5-text_indentation.txt
=================================

This module prints a text with 2 new lines after each of these characters: ., ? and :

Sample Usage
============

    >>> text_indentation = __import__('5-text_indentation').text_indentation
    >>> text_indentation("Hello.")
    Hello.
    <BLANKLINE>

There should be no space at the beginning
    >>> text_indentation("   Kofi is here.")
    Kofi is here.
    <BLANKLINE>

There should be no at the end of each printed line
    >>> text_indentation("Hello.   ")
    Hello.
    <BLANKLINE>

    >>> text_indentation("    Woah now.    This is messy.   ")
    Woah now.
    <BLANKLINE>
    This is messy.
    <BLANKLINE>

New lines are only printed for the characters ``.``, ``?``, and ``:`` -
text not ending with one of these characters is not ended with a new line.

    >>> text_indentation("No ending period, what bad grammar")
    No ending period, what bad grammar

New lines within a string are printed as normal.

    >>> text_indentation("Let's print a new-line! Here goes:\nPrinted.")
    Let's print a new-line! Here goes:
    <BLANKLINE>
    <BLANKLINE>
    Printed.
    <BLANKLINE>

    >>> text_indentation("\n\n\n We just printed three new lines.")
    <BLANKLINE>
    <BLANKLINE>
    <BLANKLINE>
    We just printed three new lines.
    <BLANKLINE>

    >>> text_indentation("A sneaky \n new line.")
    A sneaky 
    new line.
    <BLANKLINE>

Invalid Text
============

The paramter ``text`` must be a string. Otherwise, a TypeError is raised.

::

    >>> text_indentation(7)
    Traceback (most recent call last):
    TypeError: text must be a string

::

    >>> text_indentation({"one": 1, "two": 2})
    Traceback (most recent call last):
    TypeError: text must be a string
